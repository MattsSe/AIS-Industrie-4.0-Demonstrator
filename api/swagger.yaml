swagger: '2.0'
info:
  version: 1.0.0
  title: opc ua 
  description: The API for OPC UA Server

consumes:
  - application/json
produces:
  - application/json
paths:
  /server:
    post:
      tags:
      - "Server"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema: 
          $ref: "#/definitions/ServerConnection"
        description: describes the Connection Options for the OPC ClientConnection
      operationId: connectServer
      responses:
        200:
          description: "response"
          schema:
            type: object
      x-swagger-router-controller: "Server"
    get:
      tags:
      - "Server"
      description: Query Status of a specific server
      operationId: getServerConnectionState
      parameters:
      - name: "url"
        in: query
        type: "string"
        description: check connection against a specific url
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "Server"
      
  /server/monitored/:
    get:
      tags:
      - Server
      description: returns all monitored items
      operationId: getMonitoredItems
      parameters:
      - in: query
        name: limit
        type: integer
        format: int32
        description: max number of items to return
      responses:
        200:
          description: All the Monitred items
          schema:
            type: array
            items: 
              $ref: '#/definitions/ApiResponse'
      x-swagger-router-controller: "Server"
      
    delete:
      tags: 
        - Server
      description: clears all monitred items
      operationId: clearMonitoredItems
      parameters:
      - in: query
        name: limit
        type: integer
        format: int32
        description: max number of items to unsubscribe
      responses:
        200:
          description: Clear all Subscriptions
      x-swagger-router-controller: "Server"
  
  /server/monitored/{nodeId}:
    get:
      tags:
      - Server
      description: returns all monitored items
      operationId: getMonitoredItem
      parameters:
      - in: path
        name: nodeId
        required: true
        type: string
        description: nodeId of the monitored items
      responses:
        200:
          description: All the Monitred items
          schema:
            type: array
            items: 
              $ref: '#/definitions/ApiResponse'
      x-swagger-router-controller: "Server"
      
    delete:
      tags: 
        - Server
      description: terminate the monitred item subscription
      operationId: clearMonitoredItem
      parameters:
      - in: path
        name: nodeId
        required: true
        type: string
        description: nodeId of the monitored items
      responses:
        200:
          description: Clear all Subscriptions
      x-swagger-router-controller: "Server"  
  
  /server/monitored/{nodeId}/{attributeId}:
    post:
      tags:
      - Server
      description: sets a dimmer to a specific value on a timer
      operationId: monitorItem
      parameters:
      - name: nodeId
        in: path
        required: true
        type: string
      - name: attributeId
        in: path
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: response
          schema:
            $ref: '#/definitions/ApiResponse'
      x-swagger-router-controller: "Server"
      
  /server/browse/{qualifiedName}:
    get:
      tags:
      - Server
      operationId: getBrowseInfo
      parameters:
      - name: qualifiedName
        in: path
        required: true
        type: string
      responses:
        200:
          description: response
          schema:
            $ref: '#/definitions/BrowseDescription'
      x-swagger-router-controller: "Server"
  
  /server/variables/{nodeId}:
    get:
      tags:
      - Server
      operationId: readVariableValue
      parameters:
      - name: nodeId
        in: path
        required: true
        type: string
      responses:
        200:
          description: response
          schema:
            $ref: '#/definitions/VariableValue'
      x-swagger-router-controller: "Server"
      
  /server/variables/{nodeId}/{value}:
    post:
      tags:
      - Server
      description: Writes the Value for the variable with the nodeId
      operationId: writeVariableValue
      parameters:
      - name: nodeId
        in: path
        required: true
        type: string
      - name: value
        in: path
        required: true
        type: string
      responses:
        200:
          description: Last Variable Value
          schema:
            $ref: '#/definitions/VariableValue'
      x-swagger-router-controller: "Server"
  
definitions:
  ConnectionStrategy:
    type: object
    properties:
      maxRetry:
        type: number
      initialDelay:
        type: number
      maxDelay:
        type: number
      randomisationFactor:
        type: number
  ClientOptions:
    type: object
    properties:
      securityMode:
        type: string
      securityPolicy:
        type: string
      clientName:
        type: string
      connectionStrategy:
        $ref:  "#/definitions/ConnectionStrategy"
  ServerConnection:
    type: object
    properties:
      endpointUrl:
        type: string
      forceReconnect:
        type: boolean
      clientOptions:
        $ref: "#/definitions/ClientOptions"
  ApiResponse:
    type: object
    
  VariableValue:
    type: object
    properties:
      nodeId:
        type: string
      value:
        type: string
      valid:
        type: boolean
  BrowseResult:
    type: object
      
  BrowseDescription:
    type: object
    
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /api/opcua
# schemes:
#  - http
# Added by API Auto Mocking Plugin
# basePath: /api
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
basePath: /api