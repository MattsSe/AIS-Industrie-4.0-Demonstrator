swagger: '2.0'
info:
  version: 1.0.0
  title: opc ua
  description: The API for OPC UA Server

consumes:
  - application/json
produces:
  - application/json
paths:
  /server:
    post:
      tags:
      - "Connector"
      summary: connect to server
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/ServerConnection"
        description: describes the Connection Options for the OPC ClientConnection
      operationId: connectServer
      responses:
        200:
          description: "response"
          schema:
            $ref: "#/definitions/ServerConnectionResponse"
      x-swagger-router-controller: "Connector"
    get:
      tags:
      - "Connector"
      description: Query Status of a specific server
      operationId: getServerConnectionState
      summary: current connection state
      parameters:
      - name: "url"
        in: query
        type: "string"
        description: check connection against a specific url
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ServerConnectionState"
      x-swagger-router-controller: "Connector"

  /server/browse/{nodeId}:
    get:
      summary: fetch all attributes for Nodeid
      description: returns all available Attributes for the nodeId
      operationId: getBrowseInfo
      tags:
        - "Browser"
      parameters:
        - in: path
          name: nodeId
          required: true
          type: string
          description: nodeId of the desired item
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BrowseDescription'
          description: describes additional info
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BrowseResult'
      x-swagger-router-controller: "Browser"

  /server/browse/{nodeId}/attributes/:
    get:
      summary: fetch all attributes for Nodeid
      description: returns all available Attributes for the nodeId
      operationId: getAllAttributes
      tags:
        - "Browser"
      parameters:
        - in: path
          name: nodeId
          required: true
          type: string
          description: nodeId of the desired item
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ReadAttributesOptions"
          description: describes the Connection Options for the OPC ClientConnection
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/AttributeDataList"
      x-swagger-router-controller: "Browser"

  /server/browse/{nodeId}/children/:
    get:
      tags:
        - "Browser"
      summary: fetch direct children for the given nodeId
      description: returns all available Attributes for the nodeId
      operationId: getChildren
      parameters:
        - in: path
          name: nodeId
          required: true
          type: string
          description: nodeId of the desired item
        - in: body
          name: body
          description: the options for collecting the child items
          schema:
            $ref: "#/definitions/BrowseDescription"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ReferenceDataList"
      x-swagger-router-controller: "Browser"

  /server/monitored/:
    get:
      tags:
      - "Subscription"
      description: returns all monitored items
      summary: fetch all subscriptions
      operationId: getMonitoredItems
      parameters:
      - in: query
        name: limit
        type: integer
        format: int32
        description: max number of items to return
      responses:
        200:
          description: All the Monitred items
          schema:
            $ref: '#/definitions/SubscriptionDataList'
      x-swagger-router-controller: "Subscription"

    delete:
      tags:
        - "Subscription"
      description: clears all monitred items
      summary: clear all subscriptions
      operationId: clearMonitoredItems
      parameters:
      - in: query
        name: limit
        type: integer
        format: int32
        description: max number of items to unsubscribe
      responses:
        200:
          description: Clear all Subscriptions
      x-swagger-router-controller: "Subscription"

  /server/monitored/{nodeId}:
    get:
      tags:
      - "Subscription"
      description: returns all monitored items
      summary: fetch subscription for the nodeId
      operationId: getMonitoredItem
      parameters:
      - in: path
        name: nodeId
        required: true
        type: string
        description: nodeId of the monitored items
      responses:
        200:
          description: All the Monitred items
          schema:
            $ref: '#/definitions/SubscriptionData'
      x-swagger-router-controller: "Subscription"

    delete:
      tags:
        - "Subscription"
      description: terminate the monitred item subscription
      operationId: clearMonitoredItem
      summary: clear subscription for item
      parameters:
      - in: path
        name: nodeId
        required: true
        type: string
        description: nodeId of the monitored items
      responses:
        200:
          description: Clear all Subscriptions
      x-swagger-router-controller: "Subscription"

  /server/monitored/{nodeId}/{attributeId}:
    post:
      tags:
      - "Subscription"
      description: adds a new subscription for the item
      summary: create new subscription for item
      operationId: monitorItem
      parameters:
      - name: nodeId
        in: path
        required: true
        type: string
      - name: attributeId
        in: path
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: response
          schema:
            $ref: '#/definitions/ApiResponse'
      x-swagger-router-controller: "Subscription"

  /server/variables/{nodeId}:
    get:
      tags:
      - "Variables"
      operationId: readVariableValue
      parameters:
      - name: nodeId
        in: path
        required: true
        type: string
      responses:
        200:
          description: response
          schema:
            $ref: '#/definitions/VariableValue'
      x-swagger-router-controller: "Variables"

  /server/variables/{nodeId}/{value}:
    post:
      tags:
      - "Variables"
      description: Writes the Value for the variable with the nodeId
      operationId: writeVariableValue
      parameters:
      - name: nodeId
        in: path
        required: true
        type: string
      - name: value
        in: path
        required: true
        type: string
      responses:
        200:
          description: Last Variable Value
          schema:
            $ref: '#/definitions/VariableValue'
      x-swagger-router-controller: "Variables"

definitions:
  ServerConnectionState:
    type: object
    properties:
      connected:
        type: boolean
      endPointUrl:
        type: string
  ServerConnectionResponse:
    type: object
    required: ["success"]
    properties:
      success:
        type: boolean
      msg:
        type: string
  SubscriptionDataList:
    type: array
    items:
      $ref: "#/definitions/SubscriptionData"
  SubscriptionData:
    type: object
  ReferenceDataList:
    type: array
    items:
      $ref: "#/definitions/ReferenceData"
  ReferenceData:
    type: object
    required: ["nodeId", "nodeClass", "browseName"]
    properties:
      nodeId:
        type: string
      nodeClass:
        type: string
      browseName:
        type: string
      children:
        $ref: "#/definitions/ReferenceDataList"
  ReadAttributesOptions:
    type: object
  AttributeDataList:
    type: array
    items:
      $ref: "#/definitions/AttributeData"
  AttributeData:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      datatype:
        type: string
  ConnectionStrategy:
    type: object
    properties:
      maxRetry:
        type: number
      initialDelay:
        type: number
      maxDelay:
        type: number
      randomisationFactor:
        type: number
  ClientOptions:
    type: object
    properties:
      securityMode:
        type: string
      securityPolicy:
        type: string
      clientName:
        type: string
      connectionStrategy:
        $ref:  "#/definitions/ConnectionStrategy"
  ServerConnection:
    type: object
    required: ["endpointUrl"]
    properties:
      endpointUrl:
        type: string
      forceReconnect:
        type: boolean
      clientOptions:
        $ref: "#/definitions/ClientOptions"
  ApiResponse:
    type: object

  VariableValue:
    type: object
    properties:
      nodeId:
        type: string
      value:
        type: string
      valid:
        type: boolean
  BrowseResult:
    type: object

  BrowseDescription:
    type: object

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
basePath: /api
