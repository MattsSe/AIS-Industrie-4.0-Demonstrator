---
swagger: "2.0"
info:
  description: "The API for OPC UA Server"
  version: "1.0.0"
  title: "opc ua"
host: "virtserver.swaggerhub.com"
basePath: "/api"
schemes:
- "https"
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /server:
    get:
      tags:
      - "Connector"
      summary: "current connection state"
      description: "Query Status of a specific server"
      operationId: "getServerConnectionState"
      parameters:
      - name: "url"
        in: "query"
        description: "check connection against a specific url"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "Connector"
    post:
      tags:
      - "Connector"
      summary: "connect to server"
      operationId: "connectServer"
      parameters:
      - in: "body"
        name: "body"
        description: "describes the Connection Options for the OPC ClientConnection"
        required: true
        schema:
          $ref: "#/definitions/ServerConnection"
      responses:
        200:
          description: "response"
          schema:
            type: "object"
            properties: {}
      x-swagger-router-controller: "Connector"
  /server/browse/{nodeId}:
    get:
      tags:
      - "Browser"
      summary: "fetch all attributes for Nodeid"
      description: "returns all available Attributes for the nodeId"
      operationId: "getBrowseInfo"
      parameters:
      - name: "nodeId"
        in: "path"
        description: "nodeId of the desired item"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "describes additional info"
        required: false
        schema:
          $ref: "#/definitions/BrowseDescription"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BrowseResult"
      x-swagger-router-controller: "Browser"
  /server/browse/{nodeId}/attributes/:
    get:
      tags:
      - "Browser"
      summary: "fetch all attributes for Nodeid"
      description: "returns all available Attributes for the nodeId"
      operationId: "getAllAttributes"
      parameters:
      - name: "nodeId"
        in: "path"
        description: "nodeId of the desired item"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "describes the Connection Options for the OPC ClientConnection"
        required: true
        schema:
          $ref: "#/definitions/ReadAttributesOptions"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AttributeDataList"
      x-swagger-router-controller: "Browser"
  /server/browse/{nodeId}/children/:
    get:
      tags:
      - "Browser"
      summary: "fetch direct children for the given nodeId"
      description: "returns all available Attributes for the nodeId"
      operationId: "getChildren"
      parameters:
      - name: "nodeId"
        in: "path"
        description: "nodeId of the desired item"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "the options for collecting the child items"
        required: false
        schema:
          $ref: "#/definitions/BrowseDescription"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ReferenceDataList"
      x-swagger-router-controller: "Browser"
  /server/monitored/:
    get:
      tags:
      - "Subscription"
      summary: "fetch all subscriptions"
      description: "returns all monitored items"
      operationId: "getMonitoredItems"
      parameters:
      - name: "limit"
        in: "query"
        description: "max number of items to return"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "All the Monitred items"
          schema:
            $ref: "#/definitions/SubscriptionDataList"
      x-swagger-router-controller: "Subscription"
    delete:
      tags:
      - "Subscription"
      summary: "clear all subscriptions"
      description: "clears all monitred items"
      operationId: "clearMonitoredItems"
      parameters:
      - name: "limit"
        in: "query"
        description: "max number of items to unsubscribe"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Clear all Subscriptions"
      x-swagger-router-controller: "Subscription"
  /server/monitored/{nodeId}:
    get:
      tags:
      - "Subscription"
      summary: "fetch subscription for the nodeId"
      description: "returns all monitored items"
      operationId: "getMonitoredItem"
      parameters:
      - name: "nodeId"
        in: "path"
        description: "nodeId of the monitored items"
        required: true
        type: "string"
      responses:
        200:
          description: "All the Monitred items"
          schema:
            $ref: "#/definitions/SubscriptionData"
      x-swagger-router-controller: "Subscription"
    delete:
      tags:
      - "Subscription"
      summary: "clear subscription for item"
      description: "terminate the monitred item subscription"
      operationId: "clearMonitoredItem"
      parameters:
      - name: "nodeId"
        in: "path"
        description: "nodeId of the monitored items"
        required: true
        type: "string"
      responses:
        200:
          description: "Clear all Subscriptions"
      x-swagger-router-controller: "Subscription"
  /server/monitored/{nodeId}/{attributeId}:
    post:
      tags:
      - "Subscription"
      summary: "create new subscription for item"
      description: "adds a new subscription for the item"
      operationId: "monitorItem"
      parameters:
      - name: "nodeId"
        in: "path"
        required: true
        type: "string"
      - name: "attributeId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "response"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "Subscription"
  /server/variables/{nodeId}:
    get:
      tags:
      - "Variables"
      operationId: "readVariableValue"
      parameters:
      - name: "nodeId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "response"
          schema:
            $ref: "#/definitions/VariableValue"
      x-swagger-router-controller: "Variables"
  /server/variables/{nodeId}/{value}:
    post:
      tags:
      - "Variables"
      description: "Writes the Value for the variable with the nodeId"
      operationId: "writeVariableValue"
      parameters:
      - name: "nodeId"
        in: "path"
        required: true
        type: "string"
      - name: "value"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Last Variable Value"
          schema:
            $ref: "#/definitions/VariableValue"
      x-swagger-router-controller: "Variables"
definitions:
  SubscriptionDataList:
    type: "array"
    items:
      $ref: "#/definitions/SubscriptionData"
  SubscriptionData:
    type: "object"
  ReferenceDataList:
    type: "array"
    items:
      $ref: "#/definitions/ReferenceData"
  ReferenceData:
    type: "object"
    required:
    - "browseName"
    - "nodeClass"
    - "nodeId"
    properties:
      nodeId:
        type: "string"
      nodeClass:
        type: "string"
      browseName:
        type: "string"
      children:
        $ref: "#/definitions/ReferenceDataList"
  ReadAttributesOptions:
    type: "object"
  AttributeDataList:
    type: "array"
    items:
      $ref: "#/definitions/AttributeData"
  AttributeData:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
      datatype:
        type: "string"
  ConnectionStrategy:
    type: "object"
    properties:
      maxRetry:
        type: "number"
      initialDelay:
        type: "number"
      maxDelay:
        type: "number"
      randomisationFactor:
        type: "number"
  ClientOptions:
    type: "object"
    properties:
      securityMode:
        type: "string"
      securityPolicy:
        type: "string"
      clientName:
        type: "string"
      connectionStrategy:
        $ref: "#/definitions/ConnectionStrategy"
  ServerConnection:
    type: "object"
    required:
    - "endpointUrl"
    properties:
      endpointUrl:
        type: "string"
      forceReconnect:
        type: "boolean"
      clientOptions:
        $ref: "#/definitions/ClientOptions"
  ApiResponse:
    type: "object"
  VariableValue:
    type: "object"
    properties:
      nodeId:
        type: "string"
      value:
        type: "string"
      valid:
        type: "boolean"
  BrowseResult:
    type: "object"
  BrowseDescription:
    type: "object"
